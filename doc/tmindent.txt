*vim-tmindent.txt*

TextMate <https://macromates.com/manual/en/appendix> style indentation for
(neo)vim. Also used by atom and vscode to implement auto indent.

==============================================================================
Table of Contents                             *vim-tmindent-table-of-contents*

Usage                                                     |vim-tmindent-usage|
Rule                                                       |vim-tmindent-rule|
Credits                                                 |vim-tmindent-credits|

==============================================================================

USAGE                                                     *vim-tmindent-usage*

VIM ~

>
    let g:tmindent = {
        \   'enabled': { -> index(["lua", "yaml"], &filetype) >= 0 },
        \   'default_rule': {},
        \   'rules': {
        \       'json': #{ comment: ['//'], inherit: ['&{}', '&[]'] }
        \   }
        \}
<


NEOVIM (LUA) ~

>
    require('tmindent').setup({
        enabled = function() return vim.tbl_contains({ "lua" }, vim.bo.filetype) end,
        use_treesitter = function() return true end, -- used to detect different langauge region and comments
        default_rule = {},
        rules = {
            lua = {
                comment = {'--'},
                -- inherit pair rules
                inherit = {'&{}', '&()'},
                -- these patterns are the same as TextMate's
                increase = {'\v<%(else|function|then|do|repeat)>((<%(end|until)>)@!.)*$'},
                decrease = {'^\v<%(elseif|else|end|until)>'},
                unindented = {},
                indentnext = {},
            }
        }
    })
<


INTEGRATION ~

                                                            *vim-tmindent-api*

tmindent#get_indent(lnum, bufnr)
    lnum is 1-indexed


require('tmindent').get_indent(lnum, bufnr)
    NOTE: lnum is 0-indexed


NVIM-YATI ~

>
    local tm_fts = { "lua", "javascript", "python" } -- or any other langs
    
    require("nvim-treesitter.configs").setup {
      yati = {
        default_fallback = function(lnum, computed, bufnr)
            if vim.tbl_contains(tm_fts, vim.bo[bufnr].filetype) then
                return require('tmindent').get_indent(lnum, bufnr) + computed
            end
            -- or any other fallback methods
            return require('nvim-yati.fallback').vim_auto(lnum, computed, bufnr)
        end,
      }
    }
<


RULE                                                       *vim-tmindent-rule*

- `inherit`: list of other rules to extend
- `comment`: pattern to match comment, which will be trimmed before following matching
- `increase`: `increaseIndentPattern` in TextMate
- `decrease`: `decreaseIndentPattern` in TextMate
- `unindented`: `unindentedLinePattern` in TextMate
- `indentnext`: `indentNextLinePattern` in TextMate


Basic rules include "&{}", "&[]", "&<>", "&tag".

CREDITS                                                 *vim-tmindent-credits*


- vscode
- vim-gindent <https://github.com/hrsh7th/vim-gindent>


Generated by panvimdoc <https://github.com/kdheepak/panvimdoc>

vim:tw=78:ts=8:noet:ft=help:norl:
